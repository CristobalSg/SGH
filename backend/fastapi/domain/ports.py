from typing import Protocol, Optional, List
from .entities import (
    DocenteCreate, Docente,
    RestriccionCreate, Restriccion,
    RestriccionHorarioCreate, RestriccionHorario,
    BloqueCreate, Bloque
)

class DocenteRepositoryPort(Protocol):
    def create(self, docente: DocenteCreate) -> Docente: ...
    def get_by_id(self, docente_id: int) -> Optional[Docente]: ...
    def get_by_email(self, email: str) -> Optional[Docente]: ...
    def get_all(self) -> List[Docente]: ...
    def update(self, docente_id: int, docente_data: dict) -> Optional[Docente]: ...
    def delete(self, docente_id: int) -> bool: ...

class RestriccionRepositoryPort(Protocol):
    def create(self, restriccion: RestriccionCreate) -> Restriccion: ...
    def get_by_id(self, restriccion_id: int) -> Optional[Restriccion]: ...
    def get_all(self) -> List[Restriccion]: ...
    def get_by_docente(self, docente_id: int) -> List[Restriccion]: ...
    def update(self, restriccion_id: int, restriccion_data: dict) -> Optional[Restriccion]: ...
    def delete(self, restriccion_id: int) -> bool: ...

class RestriccionHorarioRepositoryPort(Protocol):
    def create(self, restriccion: RestriccionHorarioCreate) -> RestriccionHorario: ...
    def get_by_id(self, restriccion_id: int) -> Optional[RestriccionHorario]: ...
    def get_by_docente(self, docente_id: int) -> List[RestriccionHorario]: ...
    def update(self, restriccion_id: int, restriccion_data: dict) -> Optional[RestriccionHorario]: ...
    def delete(self, restriccion_id: int) -> bool: ...

class BloqueRepositoryPort(Protocol):
    def create(self, bloque: BloqueCreate) -> Bloque: ...
    def get_by_id(self, bloque_id: int) -> Optional[Bloque]: ...
    def get_all(self) -> List[Bloque]: ...
    def update(self, bloque_id: int, bloque_data: dict) -> Optional[Bloque]: ...
    def delete(self, bloque_id: int) -> bool: ...
