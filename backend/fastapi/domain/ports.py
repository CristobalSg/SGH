from typing import Protocol, Optional, List
from uuid import UUID
from .entities import User, ScheduleRequirement

class UserRepositoryPort(Protocol):
    def add(self, user: User) -> User: ...
    def get(self, user_id: UUID) -> Optional[User]: ...
    def get_by_username(self, username: str) -> Optional[User]: ...
    def list(self) -> List[User]: ...

class ScheduleRepositoryPort(Protocol):
    def add(self, schedule: ScheduleRequirement) -> ScheduleRequirement: ...
    def get(self, schedule_id: UUID) -> Optional[ScheduleRequirement]: ...
    def list(self) -> List[ScheduleRequirement]: ...
    def list_by_user(self, user_id: UUID) -> List[ScheduleRequirement]: ...
    def update_status(self, schedule_id: UUID, status: str) -> Optional[ScheduleRequirement]: ...
